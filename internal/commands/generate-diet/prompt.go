package generatediet

import (
	"fmt"

	"diet_bot/internal/entity"
)

var mainPrompt = `
Ты — опытный диетолог с практикой составления сбалансированных рационов. Составь рацион питания на %d дней на основе следующих данных:

Основные параметры:
- Калории: %d ккал
- БЖУ: %.0f г белков / %.0f г жиров / %.0f г углеводов

Образ жизни и тренировки: %s  
Ограничения по времени (приёмы пищи, интервальное голодание и т.п.): %s  
Принципы питания (вегетарианство, ПП, кето и т.п.): %s  
Индивидуальные ограничения (аллергии, непереносимость): %s

Предпочтения:
- Каши на завтрак: %s
- Крупы на гарнир: %s
- Овощи: %s
- Фрукты: %s
- Орехи и семена: %s
- Молочные продукты: %s
- Рыба: %s
- Мясо: %s
- Хлеб: %s
- Яйца: %t

Структура, по которой нужно сформировать ответ (заполни её актуальными значениями, не возвращай схему): 
%v

А вот требования к ответу:
- Верни только JSON — **без текста до или после**, без схем, только чистый JSON,
  сразу готовый к парсингу в коде. Не нужно добавлять никаких дополнительных символов.
  Старт с { и конец с }. Формат ответа - строго JSON, не jsonschema, а обычный json,
  который я смогу сразу распарсить в код.
- Если в схеме указано "UUID Заполнять не нужно", то используй "00000000-0000-0000-0000-000000000000"
- Каждый день рациона должен быть отдельно в "daily_diet"
- Каждый прием пищи в рамках дня должен быть отдельно в "meals"
- Тип веса блюда тоже нужно указывать. Для этого есть поле "weight_type"
- Используй как отдельные продукты, так и готовые блюда (например, "гречка с курицей")
- Вес блюда указывай в отдельном поле, не в названии
- Обязательно соблюдай баланс: суммарная калорийность за день должна строго соответствовать указанной (±5%), так же как и БЖУ (±5%)
- Рацион должен быть реалистичным и приближенным к повседневной жизни. Используй простые, доступные 
  продукты и блюда, которые можно готовить регулярно. Без сложных блюд с множеством компонентов.
  За неделю — не более 3 гарниров, 2 видов мяса, 2 видов рыбы.
- Все значения калорийности и БЖУ должны быть максимально точными — ориентируйся на проверенные базы
  данных (например, USDA, FatSecret, Калоризатор.ру). Каждый продукт и блюдо должен иметь точный расчёт веса, калорийности и состава БЖУ.
- Не округляй данные ‘на глаз’. Все значения должны быть вычислены и подтверждены на основе стандартных пищевых таблиц
- Суммарные показатели по дню должны соответствовать заданной норме с допустимым отклонением не более 5%.
- В рационе должно быть не более 20 блюд и продуктов 

Типичный пользователь: Обычный городской житель в России, который следит за своим здоровьем и фигурой.
У него не особо много времени на готовку. Но при этом что-то базовое он готовить может и умеет.
`

func GenerateDietPrompt(configuration *entity.DietConfiguration, daysCount int) string {
	schema, err := GenerateJSONSchema()
	if err != nil {
		return fmt.Sprintf("Ошибка при генерации JSON Schema: %v", err)
	}

	return fmt.Sprintf(mainPrompt,
		daysCount,
		configuration.Calories,
		configuration.PFC.Proteins,
		configuration.PFC.Fats,
		configuration.PFC.Carbs,
		configuration.LifestyleAndWorkouts,
		configuration.TimeRestrictions,
		configuration.NutritionPrinciples,
		configuration.IndividualRestrictions,
		configuration.FoodConfiguration.BreakfastCereals,
		configuration.FoodConfiguration.SideDishCereals,
		configuration.FoodConfiguration.Vegetables,
		configuration.FoodConfiguration.Fruits,
		configuration.FoodConfiguration.NutsAndSeeds,
		configuration.FoodConfiguration.DairyProducts,
		configuration.FoodConfiguration.Fish,
		configuration.FoodConfiguration.Meat,
		configuration.FoodConfiguration.Bread,
		configuration.FoodConfiguration.Eggs,
		schema,
	)
}
